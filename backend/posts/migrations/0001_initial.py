# Generated by Django 3.0.8 on 2020-08-15 08:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tags', '0001_initial'),
        ('image_files', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, verbose_name='title')),
                ('slug', models.SlugField(unique=True, verbose_name='slug')),
                ('description', models.CharField(max_length=255, verbose_name='description')),
                ('content', models.TextField(verbose_name='content')),
                ('is_draft', models.BooleanField(default=True, verbose_name='is draft')),
                ('is_publish', models.BooleanField(default=False, verbose_name='is publish')),
                ('enable_cmt', models.BooleanField(default=True, verbose_name='enable comment')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='update at')),
                ('publish_at', models.DateTimeField(null=True, verbose_name='publish at')),
                ('read_time', models.PositiveSmallIntegerField(verbose_name='read time')),
                ('views', models.IntegerField(default=0, verbose_name='title')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL, verbose_name='title')),
                ('images', models.ManyToManyField(to='image_files.ImageForPost')),
                ('publish_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='publish_by', to=settings.AUTH_USER_MODEL, verbose_name='publishing manager')),
                ('tags', models.ManyToManyField(to='tags.Tag')),
            ],
            options={
                'ordering': ['-publish_at'],
            },
        ),
    ]
